[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py310"
include = ["pyproject.toml", "netfuzz/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".toml",
]
[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
ignore = [
    "A003",
    "E101",
    "E402",
    "E501",
    "E731",
    "F405",
    "F821",
    "W191",
    "W505",
    "ISC001",
]
select = [
    "A",
    "E",
    "F",
    "I",
    "W",
    "C4",
    "ISC",
    "SLOT",
    "FLY",
    "PGH",
    "RET506",
    "RET507",
    "RET508",
]


[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = [
    "all",
    "bin",
    "breakpoint",
    "copyright",
    "dir",
    "exit",
    "format",
    "hex",
    "map",
    "max",
    "min",
    "next",
    "type",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
skip-magic-trailing-comma = true
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
files = ["netfuzz/**/*.py"]
exclude = "(tests/|examples/|docs/)"
disallow_untyped_defs = true
disallow_any_unimported = false
ignore_missing_imports = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
show_error_codes = true
show_error_context = true
show_column_numbers = true
warn_unused_ignores = true
strict_optional = true
allow_untyped_globals = false
allow_redefinition = true
warn_redundant_casts = true
warn_unreachable = true
warn_no_return = true
pretty = true
incremental = true
disable_error_code = ["assignment"]

[tool.isort]
profile = "black"
force_single_line = true
# known_third_party = []
# split-on-trailing-comma = false
add_imports = "from __future__ import annotations"

[tool.coverage.run]
branch = true
parallel = true
disable_warnings = ["module-not-imported"]
source = ["${SRC_DIR-.}"]
# omit = ["ida_script.py"]
data_file = ".cov/coverage"

[tool.coverage.report]
# omit = ["ida_script.py", "tests/*"]

[tool.pytest.ini_options]
addopts = "--cov=netfuzz --cov-report=term-missing --cov-report=xml"
testpaths = ["tests"]

[tool.poetry]
name = "netfuzz"
version = "1.0.1"
description = "Network Protocol Fuzzer with boofuzz"
authors = ["Phantomn <tmdvyr123@gmail.com>"]
readme = "README.md"
packages = [{ include = "netfuzz" }]

[tool.poetry.dependencies]
python = "^3.10"
boofuzz = "^0.4.2"

[tool.poetry.group.dev.dependencies]
coverage = "^7.6.1"
pytest-cov = "^5.0.0"
ruff = "^0.5.7"
mypy = "^1.11.1"
isort = "^5.13.2"
sortedcontainers-stubs = "^2.4.2"
tomli = "^2.0.1"
types-pygments = "^2.18.0.20240506"
types-tabulate = "^0.9.0.20240106"
vermin = "^1.6.0"
mkinit = "^1.1.0"
monkeytype = "^23.3.0"
pytest = "^8.3.2"

[tool.poetry.group.docs.dependencies]
mdutils = "^1.6.0"
mkdocs = "^1.6.0"
mkdocs-gen-files = "^0.5.0"
mkdocs-material = "^9.5.31"
mkdocs-minify-plugin = "^0.8.0"
mkdocs-rss-plugin = "^1.15.0"
mkdocstrings = "^0.25.2"
mkdocstrings-python = "^1.10.7"
pymdown-extensions = "^10.9"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
